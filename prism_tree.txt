@ ProgramNode (location: (1,0)-(1,22))
├── locals: []
└── statements:
    @ StatementsNode (location: (1,0)-(1,22))
    └── body: (length: 1)
        └── @ CallNode (location: (1,0)-(1,22))
            ├── flags: ∅
            ├── receiver:
            │   @ IntegerNode (location: (1,0)-(1,1))
            │   └── flags: decimal
            ├── call_operator_loc: (1,1)-(1,2) = "."
            ├── name: :times
            ├── message_loc: (1,2)-(1,7) = "times"
            ├── opening_loc: ∅
            ├── arguments: ∅
            ├── closing_loc: ∅
            └── block:
                @ BlockNode (location: (1,7)-(1,22))
                ├── locals: []
                ├── parameters: ∅
                ├── body:
                │   @ StatementsNode (location: (1,9)-(1,21))
                │   └── body: (length: 1)
                │       └── @ CallNode (location: (1,9)-(1,21))
                │           ├── flags: attribute_write
                │           ├── receiver:
                │           │   @ CallNode (location: (1,9)-(1,10))
                │           │   ├── flags: variable_call, ignore_visibility
                │           │   ├── receiver: ∅
                │           │   ├── call_operator_loc: ∅
                │           │   ├── name: :h
                │           │   ├── message_loc: (1,9)-(1,10) = "h"
                │           │   ├── opening_loc: ∅
                │           │   ├── arguments: ∅
                │           │   ├── closing_loc: ∅
                │           │   └── block: ∅
                │           ├── call_operator_loc: ∅
                │           ├── name: :[]=
                │           ├── message_loc: (1,10)-(1,17) = "[\"abc\"]"
                │           ├── opening_loc: (1,10)-(1,11) = "["
                │           ├── arguments:
                │           │   @ ArgumentsNode (location: (1,11)-(1,21))
                │           │   ├── flags: ∅
                │           │   └── arguments: (length: 2)
                │           │       ├── @ StringNode (location: (1,11)-(1,16))
                │           │       │   ├── flags: ∅
                │           │       │   ├── opening_loc: (1,11)-(1,12) = "\""
                │           │       │   ├── content_loc: (1,12)-(1,15) = "abc"
                │           │       │   ├── closing_loc: (1,15)-(1,16) = "\""
                │           │       │   └── unescaped: "abc"
                │           │       └── @ IntegerNode (location: (1,20)-(1,21))
                │           │           └── flags: decimal
                │           ├── closing_loc: (1,16)-(1,17) = "]"
                │           └── block: ∅
                ├── opening_loc: (1,7)-(1,8) = "{"
                └── closing_loc: (1,21)-(1,22) = "}"
